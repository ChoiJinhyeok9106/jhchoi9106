<h2>Google OTP</h2>
<section class="sub_cont_box" id="app">
    <section class="cont_box">
        <h3 class="h3">Google OTP</h3>
		<div class="form-group row form-row">        	
	        <ul class="list-type01">
	        	<li>Google OTP 키 생성 및 검증</li>
	        	<li>1. 구글 OTP 앱을 설치 합니다.</li>
	        	<li>2, 사용자 아이디, 호스트 입력 후 OTP KEY를 생성 합니다.</li>
	        	<li>3, 구글 OTP 앱에 생성 된 KEY 혹은 QR CODE로 등록 합니다.</li>
	        	<li>4, 등록 후 나타나는 OTP NUMBER(6자리)를 입력 후 2차인증을 시도합니다.</li>
			</ul>
		</div>
    </section>
    
    <section class="cont_box">
<textarea id="codeEditor1">
	generate: function(){
		var self = this;
   		var returnVal = axios.get('/commons/googleOTP/generate/'+this.userId+'/'+this.host);
   		 
   		returnVal.then(function(response) {
			var returnData = response.data;
			self.otpKey = returnData.encodedKey;
			self.otpUrl = returnData.url; 
		}).catch(function(error) {
			console.error('error:', error);
		})
	},
    checkCode: function(){
	  	var self = this;
   		var returnVal = axios.get('/commons/googleOTP/checkCode/'+this.otpKey+'/'+this.otpCode);
   		 
   		returnVal.then(function(response) {
			var returnData = response.data;
			self.result = returnData ? "일치" : "불일치";
		}).catch(function(error) {
			console.error('error:', error);
		})
	},
</textarea>
    </section>
    
    
    
    <section class="cont_box">
        <h3 class="h3">키 생성</h3>
		<div class="row form-row">
	  		<div class="form-group col s6 l6">
				<label class="label-type01 required" for="userId">사용자 아이디</label>
	            <input class="size-m" type="text" id="userId"  name="userId" placeholder="사용자 아이디" v-model="userId"/>
			</div>
			<div class="form-group col s6 l6">
				<label class="label-type01 required" for="userId">호스트</label>
	            <input class="size-m" type="text" id="host"  name="host" placeholder="서버 호스트" v-model="host"/>
			</div>
		</div>
		<div class="row form-row">
	  		<div class="form-group col s	 l12">
				<label class="label-type01 required" for="otpKey">OTP KEY (돋보기 버튼 클릭 시 QR CODE가 나타납니다)</label>
				<div class="btn-input">
					<a href="#!" class="btn type02 size-m center-icon" @click="openQRCode"><span class="icon-search"></span></a>
					<input class="size-m" type="text" id="otpKey"  name="otpKey" placeholder="OTP KEY" v-model="otpKey" readonly/>
				</div>
	            
			</div>
		</div>
    	<div class="btn-line col-inline right">
    		<a href="#!" class="btn type02 size-m" @click="generate">키 생성</a>
    	</div>
    </section>
    
    <section class="cont_box">
        <h3 class="h3">OTP 입력</h3>
		<div class="row form-row">
			<div class="form-group col s6 l6">
				<label class="label-type01 required" for="otpCode">OTP NUMBER</label>
	            <input class="size-m" type="text" id="otpCode"  name="otpCode" placeholder="OTP NUMBER" v-model="otpCode"/>
			</div>
	  		<div class="form-group col s6 l6">
				<label class="label-type01 required" for="result">인증여부</label>
	            <input class="size-m" type="text" id="result"  name="result" placeholder="인증여부" v-model="result" readonly/>
			</div>
		</div>
    	<div class="btn-line col-inline right">
    		<a href="#!" class="btn type02 size-m" @click="checkCode">2차인증 로그인</a>
    	</div>
    </section>
    <modal-message :modalset="messageModal"></modal-message>
</section>

<script type="text/javascript">
/*******************************************************************************************************************************************************************
 * vue start 
 ********************************************************************************************************************************************************************/
 var vm = new Vue({
     el: '#app',
     data: {
         userId : '',
         host : window.location.host,
         otpKey : '',
         otpUrl : '',
         otpCode : '',
         result : '',
         messageModal: new ModalSet('app-modal'),
     },
     mounted: function(){
 	 	this.userId = this.session.USER_ID;
 	 },
     methods: {
    	 generate: function(){
    		 var self = this;
    		 var returnVal = axios.get('/commons/googleOTP/generate/'+this.userId+'/'+this.host);
    		 
    		 returnVal.then(function(response) {
 				var returnData = response.data;
 				self.otpKey = returnData.encodedKey;
 				self.otpUrl = returnData.url;
 			}).catch(function(error) {
 				console.error('error:', error);
 			})
         },
         checkCode: function(){
    		 var self = this;
    		 var returnVal = axios.get('/commons/googleOTP/checkCode/'+this.otpKey+'/'+this.otpCode);
    		 
    		 returnVal.then(function(response) {
 				var returnData = response.data;
 				self.result = returnData ? "일치" : "불일치";
 			}).catch(function(error) {
 				console.error('error:', error);
 			})
         },
         openQRCode: function(){
        	 this.messageModal.openModal('message', 'OTP KEY QRCODE', '<div style="text-align:center;"><img src="'+this.otpUrl+'"/></div>', 'small', '', '');
         }
     }
 });
/*******************************************************************************************************************************************************************
 * vue end 
 ********************************************************************************************************************************************************************/


/*******************************************************************************************************************************************************************
 * jui script start 
 ********************************************************************************************************************************************************************/

/*******************************************************************************************************************************************************************
 * jui script end 
 ********************************************************************************************************************************************************************/
 
/*******************************************************************************************************************************************************************
 * javascript start 
 ********************************************************************************************************************************************************************/
$(document).ready(function(){
	editor('codeEditor1', 300);
});

function editor(id, height, dataGb) {
    var target = document.getElementById(id);
    var myCodeMirror = CodeMirror.fromTextArea(target, {
        mode: dataGb,
        theme: "neo",
        lineNumbers: true,
        readOnly: true
    });
    
    myCodeMirror.setSize(null, height);
}
/*******************************************************************************************************************************************************************
 * javascript end 
 ********************************************************************************************************************************************************************/
</script>

