<h2 id="top">Dataset-PagingSet</h2>
<section class="sub_cont_box" id="app">
    <section class="cont_box">
        <h3 class="h3">Method</h3>
		<div class="form-group row form-row">        	
	        <ul class="list-type02">
	        	<li v-for="(item, index) in methodData" style="margin-top:10px;"><a :href="'#item'+index" class="btn type01 size-s c-blue" style="border:1px solid #2549b0;" >{{item.name}} {{item.param}}</a> : {{item.description}}</li>
			</ul>
		</div>
    </section>
    
    <section class="cont_box" v-for="(item, index) in methodData" :id="'item'+index">
        <h3 class="h3">{{item.name}} {{item.param}}</h3>
        <div class="row form-row">
	        <div class="form-group col s12 l12" style="margin-top:10px;">
	            <label :for="'row'+index" class="label-type01">@Description</label>
	            <p class="txt_info" style="line-height:30px; margin-left:20px;" v-html="item.description.split('\n').join('<br />')"></p>
	            <p class="txt_info" style="line-height:30px; margin-left:20px;" v-html="item.description2.split('\n').join('<br />')"></p>
	        </div>
	        <div class="form-group col s12 l12" style="margin-top:10px;">
	            <label :for="'row'+index" class="label-type01">@Syntax</label>
	            <!-- <p class="txt_info" v-html="item.syntax.split('\n').join('<br />')"></p> -->
<textarea :id="'codeEditor'+index" style="line-height:30px;" v-html="item.syntax">
</textarea>
	        </div>
	        <div class="form-group col s12 l12" style="margin-top:10px;">
	            <label :for="'row'+index" class="label-type01">@Parameters</label>
	            <p class="txt_info" style="line-height:30px; margin-left:20px;" v-html="item.parameters.split('\n').join('<br />')"></p>
	        </div>
	        <div class="form-group col s12 l12" style="margin-top:10px;">
	            <label :for="'row'+index" class="label-type01">@Return</label>
	            <p class="txt_info" style="line-height:30px; margin-left:20px;" v-html="item.returnVal.split('\n').join('<br />')"></p>
	        </div>
	        <div class="form-group col s12 l12" style="margin-top:10px;">
	            <p class="right" style="line-height:30px;"><a href="#top" class="btn type01 size-m c-sky icon-arrow-up-circle" style="border:1px; font-size:20px;"></a></p>
	        </div>
	    </div>
        <br/>
   	</section>
</section>

<style>
html {
    scroll-behavior: smooth;
}
</style>

<script type="text/javascript">
//{name:'',param:'()',description:'',description2:'',syntax:'',parameters:'',returnVal:''},
var method = [
	{name:'PagingSet',param:'(pPageCnt, pRowCnt)',description:'페이징을 위한 파일 오브젝트입니다.',description2:'',syntax:'PagingSet.PagingSet(pPageCnt, pRowCnt);\nnew PagingSet(10,10);\n// Create Object\nvar paging = new PagingSet(10,10);',parameters:'pPageCnt(Integer) : 화면에 보여질 페이지 번호 개수를 설정합니다. (기본 10)\npRowCnt(Integer) : 한 페이지에 나타날 게시물 개수를 설정합니다. (기본 10)',returnVal:'PagingSet : 페이징 셋 객체'},
	{name:'makePageList',param:'()',description:'총 건수 및 페이지별 건수 등을 이용하여 페이지 번호를 생성합니다.',description2:'',syntax:'PagingSet.makePageList();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'movePage',param:'(pPageNo)',description:'파라메터로 넘겨받은 페이지로 페이지를 이동합니다.',description2:'페이지를 이동 후 makePageList()함수가 호출되어 페이지를 재 생성 합니다.',syntax:'PagingSet.movePage(pPageNo);',parameters:'pPageNo(Integer) : 이동 할 페이지',returnVal:'boolean : 성공여부'},
	{name:'setTotalCnt',param:'(pTotalCnt)',description:'총 건수를 입력합니다.',description2:'',syntax:'PagingSet.setTotalCnt(pTotalCnt);',parameters:'pTotalCnt(Integer) : 총 건수',returnVal:'boolean : 성공여부'},
	{name:'getTotalPage',param:'()',description:'현재의 총 페이지 개수를 리턴합니다.',description2:'',syntax:'PagingSet.getTotalPage();',parameters:'',returnVal:'cnt(Integer) : 페이지 개수'},
	{name:'prevClick',param:'()',description:'이전 페이지 클릭 시 동작하는 이벤트 입니다.',description2:'',syntax:'PagingSet.prevClick();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'nextClick',param:'()',description:'다음 페이지 클릭 시 동작하는 이벤트 입니다.',description2:'',syntax:'PagingSet.nextClick();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'prevPageSetClick',param:'()',description:'이전 [this.pageCnt]개 페이지를 로드 합니다. (<< >> 버튼 클릭 시 발생 이벤트)',description2:'',syntax:'PagingSet.prevPageSetClick();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'nextPageSetClick',param:'()',description:'다음 [this.pageCnt]개 페이지를 로드 합니다. (<< >> 버튼 클릭 시 발생 이벤트))',description2:'',syntax:'PagingSet.nextPageSetClick();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'isPrevPage',param:'()',description:'이전 [this.pageCnt]개 페이지가 존재하는지 여부를 반환 합니다.',description2:'',syntax:'PagingSet.isPrevPage();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'isNextPage',param:'()',description:'다음 [this.pageCnt]개 페이지가 존재하는지 여부를 반환 합니다.',description2:'',syntax:'PagingSet.isNextPage();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'isPrev',param:'()',description:'이전 [this.pageCnt]개 페이지가 존재하는지 여부를 반환 합니다.',description2:'',syntax:'PagingSet.isPrev();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'isNext',param:'()',description:'다음 [this.pageCnt]개 페이지가 존재하는지 여부를 반환 합니다.',description2:'',syntax:'PagingSet.isNext();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'getRowCnt',param:'()',description:'한 페이지에 나타날 게시물 개수를 리턴합니다.',description2:'',syntax:'PagingSet.getRowCnt();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'setPageCnt',param:'(pPageCnt)',description:'화면에 보여질 페이지 번호 개수를 설정합니다.',description2:'',syntax:'PagingSet.setPageCnt(pPageCnt);',parameters:'pPageCnt(Integer) : 한 화면에 보여질 페이지 번호 개수',returnVal:'boolean : 성공여부'},
	{name:'getPageCnt',param:'()',description:'화면에 보여질 페이지 번호 개수를 리턴 합니다.',description2:'',syntax:'PagingSet.getPageCnt();',parameters:'',returnVal:'boolean : 성공여부'},
	{name:'getCurrentPage',param:'()',description:'현재 페이지를 리턴합니다.',description2:'',syntax:'PagingSet.getCurrentPage();',parameters:'',returnVal:'boolean : 성공여부'},
]


/*******************************************************************************************************************************************************************
 * vue start 
 ********************************************************************************************************************************************************************/
 var vm = new Vue({
    el: '#app',
    //사용할 데이터
    data: {
		testDate: new Date(),
		methodData: _.sortBy(method, ['name']),
    },
    //마운트 된 시점수행
    mounted: function(){
     
    },
    //함수
    methods: {
    	test: function(a){
    		alert(a);
    	}
    }
});
/*******************************************************************************************************************************************************************
 * vue end 
 ********************************************************************************************************************************************************************/


/*******************************************************************************************************************************************************************
 * jui script start 
 ********************************************************************************************************************************************************************/

/*******************************************************************************************************************************************************************
 * jui script end 
 ********************************************************************************************************************************************************************/
 
/*******************************************************************************************************************************************************************
 * javascript start 
 ********************************************************************************************************************************************************************/
$(document).ready(function(){
	_.forEach(vm.methodData, function(n, key) {
		editor('codeEditor'+key, 100);
	});
	
});

function editor(id, height) {
    var target = document.getElementById(id);
    var myCodeMirror = CodeMirror.fromTextArea(target, {
        mode: "javascript",
        theme: "neo",
        lineNumbers: true,
        readOnly: true
    });
    
    myCodeMirror.setSize(null, height);
}
/*******************************************************************************************************************************************************************
 * javascript end 
 ********************************************************************************************************************************************************************/
</script>

